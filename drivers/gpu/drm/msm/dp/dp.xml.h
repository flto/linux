#ifndef DP_XML
#define DP_XML

/* Autogenerated file, DO NOT EDIT manually!

This file was generated by the rules-ng-ng headergen tool in this git repository:
http://github.com/freedreno/envytools/
git clone https://github.com/freedreno/envytools.git

The rules-ng-ng source files this header was generated from are:
- /home/mesa-freedreno/src/freedreno/registers/msm.xml                 (    704 bytes, from 2020-08-14 16:33:25)
- /home/mesa-freedreno/src/freedreno/registers/freedreno_copyright.xml (   1572 bytes, from 2019-09-24 12:42:00)
- /home/mesa-freedreno/src/freedreno/registers/mdp/mdp4.xml            (  20912 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/mdp/mdp_common.xml      (   2849 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/mdp/mdp5.xml            (  37461 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/dsi/dsi.xml             (  42301 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/dsi/sfpb.xml            (    602 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/dsi/mmss_cc.xml         (   1686 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/hdmi/qfprom.xml         (    600 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/hdmi/hdmi.xml           (  41874 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/edp/edp.xml             (  10416 bytes, from 2020-08-04 14:00:46)
- /home/mesa-freedreno/src/freedreno/registers/mdp/dp.xml              (  11880 bytes, from 2020-08-14 17:30:07)

Copyright (C) 2013-2020 by the following authors:
- Rob Clark <robdclark@gmail.com> (robclark)
- Ilia Mirkin <imirkin@alum.mit.edu> (imirkin)

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice (including the
next paragraph) shall be included in all copies or substantial
portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/


#define REG_DP_HW_VERSION					0x00000000

#define REG_DP_SW_RESET						0x00000010
#define DP_SW_RESET_SW_RESET					0x00000001

#define REG_DP_PHY_CTRL						0x00000014
#define DP_PHY_CTRL_SW_RESET_PLL				0x00000001
#define DP_PHY_CTRL_SW_RESET					0x00000004

#define REG_DP_CLK_CTRL						0x00000018

#define REG_DP_CLK_ACTIVE					0x0000001c

#define REG_DP_INTR_STATUS					0x00000020

#define REG_DP_INTR_STATUS2					0x00000024

#define REG_DP_INTR_STATUS3					0x00000028

#define REG_DP_HPD_CTRL						0x00000200
#define DP_HPD_CTRL_ENABLE					0x00000001

#define REG_DP_HPD_INT_STATUS					0x00000204
#define DP_HPD_INT_STATUS_PLUG					0x00000001
#define DP_HPD_INT_STATUS_IRQ_HPD				0x00000002
#define DP_HPD_INT_STATUS_REPLUG				0x00000004
#define DP_HPD_INT_STATUS_UNPLUG				0x00000008
#define DP_HPD_INT_STATUS_STATUS__MASK				0xe0000000
#define DP_HPD_INT_STATUS_STATUS__SHIFT				29
static inline uint32_t DP_HPD_INT_STATUS_STATUS(uint32_t val)
{
	return ((val) << DP_HPD_INT_STATUS_STATUS__SHIFT) & DP_HPD_INT_STATUS_STATUS__MASK;
}

#define REG_DP_HPD_INT_ACK					0x00000208
#define DP_HPD_INT_ACK_PLUG					0x00000001
#define DP_HPD_INT_ACK_IRQ_HPD					0x00000002
#define DP_HPD_INT_ACK_REPLUG					0x00000004
#define DP_HPD_INT_ACK_UNPLUG					0x00000008
#define DP_HPD_INT_ACK_STATUS__MASK				0xe0000000
#define DP_HPD_INT_ACK_STATUS__SHIFT				29
static inline uint32_t DP_HPD_INT_ACK_STATUS(uint32_t val)
{
	return ((val) << DP_HPD_INT_ACK_STATUS__SHIFT) & DP_HPD_INT_ACK_STATUS__MASK;
}

#define REG_DP_HPD_INT_MASK					0x0000020c
#define DP_HPD_INT_MASK_PLUG					0x00000001
#define DP_HPD_INT_MASK_IRQ_HPD					0x00000002
#define DP_HPD_INT_MASK_REPLUG					0x00000004
#define DP_HPD_INT_MASK_UNPLUG					0x00000008
#define DP_HPD_INT_MASK_STATUS__MASK				0xe0000000
#define DP_HPD_INT_MASK_STATUS__SHIFT				29
static inline uint32_t DP_HPD_INT_MASK_STATUS(uint32_t val)
{
	return ((val) << DP_HPD_INT_MASK_STATUS__SHIFT) & DP_HPD_INT_MASK_STATUS__MASK;
}

#define REG_DP_HPD_REFTIMER					0x00000218
#define DP_HPD_REFTIMER_ENABLE					0x00010000

#define REG_DP_HPD_EVENT_TIME_0					0x0000021c

#define REG_DP_HPD_EVENT_TIME_1					0x00000220

#define REG_DP_AUX_CTRL						0x00000230
#define DP_AUX_CTRL_ENABLE					0x00000001
#define DP_AUX_CTRL_RESET					0x00000002

#define REG_DP_AUX_DATA						0x00000234
#define DP_AUX_DATA_READ					0x00000001
#define DP_AUX_DATA_DATA__MASK					0x0000ff00
#define DP_AUX_DATA_DATA__SHIFT					8
static inline uint32_t DP_AUX_DATA_DATA(uint32_t val)
{
	return ((val) << DP_AUX_DATA_DATA__SHIFT) & DP_AUX_DATA_DATA__MASK;
}
#define DP_AUX_DATA_INDEX__MASK					0x00ff0000
#define DP_AUX_DATA_INDEX__SHIFT				16
static inline uint32_t DP_AUX_DATA_INDEX(uint32_t val)
{
	return ((val) << DP_AUX_DATA_INDEX__SHIFT) & DP_AUX_DATA_INDEX__MASK;
}
#define DP_AUX_DATA_INDEX_WRITE					0x80000000

#define REG_DP_AUX_TRANS_CTRL					0x00000238
#define DP_AUX_TRANS_CTRL_I2C					0x00000100
#define DP_AUX_TRANS_CTRL_GO					0x00000200
#define DP_AUX_TRANS_CTRL_NO_SEND_ADDR				0x00000400
#define DP_AUX_TRANS_CTRL_NO_SEND_STOP				0x00000800

#define REG_DP_TIMEOUT_COUNT					0x0000023c

#define REG_DP_AUX_LIMITS					0x00000240

#define REG_DP_AUX_STATUS					0x00000244

#define REG_DP_MAINLINK_CTRL					0x00000400
#define DP_MAINLINK_CTRL_ENABLE					0x00000001
#define DP_MAINLINK_CTRL_RESET					0x00000002
#define DP_MAINLINK_CTRL_FB_BOUNDARY_SEL			0x02000000

#define REG_DP_STATE_CTRL					0x00000404
#define DP_STATE_CTRL_LINK_TRAINING_PATTERN1			0x00000001
#define DP_STATE_CTRL_LINK_TRAINING_PATTERN2			0x00000002
#define DP_STATE_CTRL_LINK_TRAINING_PATTERN3			0x00000004
#define DP_STATE_CTRL_LINK_TRAINING_PATTERN4			0x00000008
#define DP_STATE_CTRL_LINK_SYMBOL_ERR_MEASURE			0x00000010
#define DP_STATE_CTRL_LINK_PRBS7				0x00000020
#define DP_STATE_CTRL_LINK_TEST_CUSTOM_PATTERN			0x00000040
#define DP_STATE_CTRL_SEND_VIDEO				0x00000080
#define DP_STATE_CTRL_PUSH_IDLE					0x00000100

#define REG_DP_CONFIGURATION_CTRL				0x00000408
#define DP_CONFIGURATION_CTRL_SYNC_ASYNC_CLK			0x00000001
#define DP_CONFIGURATION_CTRL_STATIC_DYNAMIC_CN			0x00000002
#define DP_CONFIGURATION_CTRL_P_INTERLACED			0x00000004
#define DP_CONFIGURATION_CTRL_INTERLACED_BTF			0x00000008
#define DP_CONFIGURATION_CTRL_NUM_OF_LANES__MASK		0x00000030
#define DP_CONFIGURATION_CTRL_NUM_OF_LANES__SHIFT		4
static inline uint32_t DP_CONFIGURATION_CTRL_NUM_OF_LANES(uint32_t val)
{
	return ((val) << DP_CONFIGURATION_CTRL_NUM_OF_LANES__SHIFT) & DP_CONFIGURATION_CTRL_NUM_OF_LANES__MASK;
}
#define DP_CONFIGURATION_CTRL_ENHANCED_FRAMING			0x00000040
#define DP_CONFIGURATION_CTRL_SEND_VSC				0x00000080
#define DP_CONFIGURATION_CTRL_BPC__MASK				0x00000300
#define DP_CONFIGURATION_CTRL_BPC__SHIFT			8
static inline uint32_t DP_CONFIGURATION_CTRL_BPC(uint32_t val)
{
	return ((val) << DP_CONFIGURATION_CTRL_BPC__SHIFT) & DP_CONFIGURATION_CTRL_BPC__MASK;
}
#define DP_CONFIGURATION_CTRL_ASSR				0x00000400
#define DP_CONFIGURATION_CTRL_RGB_YUV				0x00000800
#define DP_CONFIGURATION_CTRL_LSCLK_DIV__MASK			0x00006000
#define DP_CONFIGURATION_CTRL_LSCLK_DIV__SHIFT			13
static inline uint32_t DP_CONFIGURATION_CTRL_LSCLK_DIV(uint32_t val)
{
	return ((val) << DP_CONFIGURATION_CTRL_LSCLK_DIV__SHIFT) & DP_CONFIGURATION_CTRL_LSCLK_DIV__MASK;
}

#define REG_DP_SOFTWARE_MVID					0x00000410

#define REG_DP_SOFTWARE_NVID					0x00000418

#define REG_DP_TOTAL_HOR_VER					0x0000041c
#define DP_TOTAL_HOR_VER_HORZ__MASK				0x0000ffff
#define DP_TOTAL_HOR_VER_HORZ__SHIFT				0
static inline uint32_t DP_TOTAL_HOR_VER_HORZ(uint32_t val)
{
	return ((val) << DP_TOTAL_HOR_VER_HORZ__SHIFT) & DP_TOTAL_HOR_VER_HORZ__MASK;
}
#define DP_TOTAL_HOR_VER_VERT__MASK				0xffff0000
#define DP_TOTAL_HOR_VER_VERT__SHIFT				16
static inline uint32_t DP_TOTAL_HOR_VER_VERT(uint32_t val)
{
	return ((val) << DP_TOTAL_HOR_VER_VERT__SHIFT) & DP_TOTAL_HOR_VER_VERT__MASK;
}

#define REG_DP_START_HOR_VER_FROM_SYNC				0x00000420
#define DP_START_HOR_VER_FROM_SYNC_HORZ__MASK			0x0000ffff
#define DP_START_HOR_VER_FROM_SYNC_HORZ__SHIFT			0
static inline uint32_t DP_START_HOR_VER_FROM_SYNC_HORZ(uint32_t val)
{
	return ((val) << DP_START_HOR_VER_FROM_SYNC_HORZ__SHIFT) & DP_START_HOR_VER_FROM_SYNC_HORZ__MASK;
}
#define DP_START_HOR_VER_FROM_SYNC_VERT__MASK			0xffff0000
#define DP_START_HOR_VER_FROM_SYNC_VERT__SHIFT			16
static inline uint32_t DP_START_HOR_VER_FROM_SYNC_VERT(uint32_t val)
{
	return ((val) << DP_START_HOR_VER_FROM_SYNC_VERT__SHIFT) & DP_START_HOR_VER_FROM_SYNC_VERT__MASK;
}

#define REG_DP_HSYNC_VSYNC_WIDTH_POLARITY			0x00000424
#define DP_HSYNC_VSYNC_WIDTH_POLARITY_HORZ__MASK		0x00007fff
#define DP_HSYNC_VSYNC_WIDTH_POLARITY_HORZ__SHIFT		0
static inline uint32_t DP_HSYNC_VSYNC_WIDTH_POLARITY_HORZ(uint32_t val)
{
	return ((val) << DP_HSYNC_VSYNC_WIDTH_POLARITY_HORZ__SHIFT) & DP_HSYNC_VSYNC_WIDTH_POLARITY_HORZ__MASK;
}
#define DP_HSYNC_VSYNC_WIDTH_POLARITY_NHSYNC			0x00008000
#define DP_HSYNC_VSYNC_WIDTH_POLARITY_VERT__MASK		0x7fff0000
#define DP_HSYNC_VSYNC_WIDTH_POLARITY_VERT__SHIFT		16
static inline uint32_t DP_HSYNC_VSYNC_WIDTH_POLARITY_VERT(uint32_t val)
{
	return ((val) << DP_HSYNC_VSYNC_WIDTH_POLARITY_VERT__SHIFT) & DP_HSYNC_VSYNC_WIDTH_POLARITY_VERT__MASK;
}
#define DP_HSYNC_VSYNC_WIDTH_POLARITY_NVSYNC			0x80000000

#define REG_DP_ACTIVE_HOR_VER					0x00000428
#define DP_ACTIVE_HOR_VER_HORIZ__MASK				0x0000ffff
#define DP_ACTIVE_HOR_VER_HORIZ__SHIFT				0
static inline uint32_t DP_ACTIVE_HOR_VER_HORIZ(uint32_t val)
{
	return ((val) << DP_ACTIVE_HOR_VER_HORIZ__SHIFT) & DP_ACTIVE_HOR_VER_HORIZ__MASK;
}
#define DP_ACTIVE_HOR_VER_VERT__MASK				0xffff0000
#define DP_ACTIVE_HOR_VER_VERT__SHIFT				16
static inline uint32_t DP_ACTIVE_HOR_VER_VERT(uint32_t val)
{
	return ((val) << DP_ACTIVE_HOR_VER_VERT__SHIFT) & DP_ACTIVE_HOR_VER_VERT__MASK;
}

#define REG_DP_MISC1_MISC0					0x0000042c
#define DP_MISC1_MISC0_SYNCHRONOUS_CLK				0x00000001
#define DP_MISC1_MISC0_COLORIMETRY_CFG__MASK			0x0000001e
#define DP_MISC1_MISC0_COLORIMETRY_CFG__SHIFT			1
static inline uint32_t DP_MISC1_MISC0_COLORIMETRY_CFG(uint32_t val)
{
	return ((val) << DP_MISC1_MISC0_COLORIMETRY_CFG__SHIFT) & DP_MISC1_MISC0_COLORIMETRY_CFG__MASK;
}
#define DP_MISC1_MISC0_TEST_BITS_DEPTH__MASK			0x00000060
#define DP_MISC1_MISC0_TEST_BITS_DEPTH__SHIFT			5
static inline uint32_t DP_MISC1_MISC0_TEST_BITS_DEPTH(uint32_t val)
{
	return ((val) << DP_MISC1_MISC0_TEST_BITS_DEPTH__SHIFT) & DP_MISC1_MISC0_TEST_BITS_DEPTH__MASK;
}

#define REG_DP_VALID_BOUNDARY					0x00000430

#define REG_DP_VALID_BOUNDARY_2					0x00000434

#define REG_DP_LOGICAL2PHYSICAL_LANE_MAPPING			0x00000438
#define DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE0__MASK		0x00000003
#define DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE0__SHIFT		0
static inline uint32_t DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE0(uint32_t val)
{
	return ((val) << DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE0__SHIFT) & DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE0__MASK;
}
#define DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE1__MASK		0x0000000c
#define DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE1__SHIFT		2
static inline uint32_t DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE1(uint32_t val)
{
	return ((val) << DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE1__SHIFT) & DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE1__MASK;
}
#define DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE2__MASK		0x00000030
#define DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE2__SHIFT		4
static inline uint32_t DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE2(uint32_t val)
{
	return ((val) << DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE2__SHIFT) & DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE2__MASK;
}
#define DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE3__MASK		0x000000c0
#define DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE3__SHIFT		6
static inline uint32_t DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE3(uint32_t val)
{
	return ((val) << DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE3__SHIFT) & DP_LOGICAL2PHYSICAL_LANE_MAPPING_LANE3__MASK;
}

#define REG_DP_MAINLINK_READY					0x00000440
#define DP_MAINLINK_READY_FOR_VIDEO				0x00000001
#define DP_MAINLINK_READY_LINK_TRAINING__MASK			0x00000038
#define DP_MAINLINK_READY_LINK_TRAINING__SHIFT			3
static inline uint32_t DP_MAINLINK_READY_LINK_TRAINING(uint32_t val)
{
	return ((val) << DP_MAINLINK_READY_LINK_TRAINING__SHIFT) & DP_MAINLINK_READY_LINK_TRAINING__MASK;
}

#define REG_DP_MAINLINK_LEVELS					0x00000444
#define DP_MAINLINK_LEVELS_SAFE_TO_EXIT_LEVEL_2			0x00000002

#define REG_DP_TU						0x0000044c

#define REG_DP_HBR2_COMPLIANCE_SCRAMBLER_RESET			0x00000454
#define DP_HBR2_COMPLIANCE_SCRAMBLER_RESET_ERM_PATTERN		0x00010000

#define REG_DP_TEST_80BIT_CUSTOM_PATTERN_REG0			0x000004c0

#define REG_DP_TEST_80BIT_CUSTOM_PATTERN_REG1			0x000004c4

#define REG_DP_TEST_80BIT_CUSTOM_PATTERN_REG2			0x000004c8

#define REG_DP_MMSS_DSC_DTO					0x0000107c

#define REG_MMSS_DP_AUDIO_CFG					0x00000600

#define REG_MMSS_DP_AUDIO_STATUS				0x00000604

#define REG_MMSS_DP_AUDIO_PKT_CTRL				0x00000608

#define REG_MMSS_DP_AUDIO_PKT_CTRL2				0x0000060c

#define REG_MMSS_DP_AUDIO_ACR_CTRL				0x00000610

#define REG_MMSS_DP_AUDIO_CTRL_RESET				0x00000614

#define REG_MMSS_DP_SDP_CFG					0x00000628

#define REG_MMSS_DP_SDP_CFG2					0x0000062c

#define REG_MMSS_DP_AUDIO_TIMESTAMP_0				0x00000630

#define REG_MMSS_DP_AUDIO_TIMESTAMP_1				0x00000634

#define REG_MMSS_DP_AUDIO_STREAM_0				0x00000640

#define REG_MMSS_DP_AUDIO_STREAM_1				0x00000644

#define REG_MMSS_DP_SDP_CFG3					0x0000064c

static inline uint32_t REG_MMSS_DP_EXTENSION(uint32_t i0) { return 0x00000650 + 0x4*i0; }

static inline uint32_t REG_MMSS_DP_EXTENSION_VALUE(uint32_t i0) { return 0x00000650 + 0x4*i0; }

#define REG_MMSS_DP_AUDIO_COPYMANAGEMENT_0			0x00000678

#define REG_MMSS_DP_AUDIO_COPYMANAGEMENT_1			0x0000067c

#define REG_MMSS_DP_AUDIO_ISRC_0				0x00000690

#define REG_MMSS_DP_AUDIO_ISRC_1				0x00000694

#define REG_MMSS_DP_AUDIO_INFOFRAME_0				0x000006a8

#define REG_MMSS_DP_AUDIO_INFOFRAME_1				0x000006ac

#define REG_MMSS_DP_AUDIO_INFOFRAME_2				0x000006b0

#define REG_MMSS_DP_GENERIC1_0					0x00000728

#define REG_MMSS_DP_GENERIC1_1					0x0000072c

#define REG_MMSS_DP_GENERIC1_2					0x00000730

#define REG_MMSS_DP_GENERIC1_3					0x00000734

#define REG_MMSS_DP_GENERIC1_4					0x00000738

#define REG_MMSS_DP_GENERIC1_5					0x0000073c

#define REG_MMSS_DP_GENERIC1_6					0x00000740

#define REG_MMSS_DP_GENERIC1_7					0x00000744

#define REG_MMSS_DP_GENERIC1_8					0x00000748

#define REG_MMSS_DP_GENERIC1_9					0x0000074c


#endif /* DP_XML */
